user nginx;
worker_processes auto;
worker_rlimit_nofile 65535;
pid /var/run/nginx.pid;

load_module modules/ngx_http_headers_more_filter_module.so;
load_module modules/ngx_http_geoip2_module.so;

events {
    worker_connections 8192;
    multi_accept on;
    use epoll;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;
    charset UTF-8;

    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    server_tokens off;
    keepalive_timeout 65;
    keepalive_requests 1000;
    client_max_body_size 50M;
    client_body_buffer_size 128k;
    client_header_buffer_size 1k;
    large_client_header_buffers 4 16k;
    reset_timedout_connection on;
    send_timeout 30;

    open_file_cache max=10000 inactive=30s;
    open_file_cache_valid 60s;
    open_file_cache_min_uses 2;
    open_file_cache_errors on;

    log_format detailed_log '$remote_addr - $remote_user [$time_local] '
                           '"$request" $status $body_bytes_sent '
                           '"$http_referer" "$http_user_agent" '
                           '$request_time $upstream_response_time $pipe '
                           '$gzip_ratio "$http_x_forwarded_for" '
                           '"$http_true_client_ip" "$http_cf_ipcountry" '
                           '"$request_id" "$http_host" "$sent_http_x_cache"';

    access_log /var/log/nginx/access.log detailed_log buffer=32k flush=5s;
    error_log /var/log/nginx/error.log warn;

    gzip on;
    gzip_comp_level 6;
    gzip_min_length 256;
    gzip_proxied any;
    gzip_vary on;
    gzip_types
        application/atom+xml
        application/javascript
        application/json
        application/ld+json
        application/manifest+json
        application/rss+xml
        application/vnd.geo+json
        application/vnd.ms-fontobject
        application/x-font-ttf
        application/x-web-app-manifest+json
        application/xhtml+xml
        application/xml
        font/opentype
        image/bmp
        image/svg+xml
        image/x-icon
        text/cache-manifest
        text/css
        text/plain
        text/vcard
        text/vnd.rim.location.xloc
        text/vtt
        text/x-component
        text/x-cross-domain-policy;

    geo $limit {
        default 1;
        10.0.0.0/8 0;
        192.168.0.0/16 0;
        172.16.0.0/12 0;
    }

    map $limit $limit_key {
        0 "";
        1 $binary_remote_addr;
    }

    limit_req_zone $limit_key zone=global:20m rate=20r/s;            # Global limit
    limit_req_zone $limit_key zone=api:10m rate=5r/s;                # API specific limit
    limit_req_zone $binary_remote_addr zone=login:10m rate=1r/s;     # Login endpoints limit
    limit_conn_zone $limit_key zone=addr:10m;                        # Connection limit

    map $remote_addr $request_id_seed {
        default $remote_addr$time_local$request$remote_port;
    }
    
    map $request_id_seed $request_id {
        default $request_id_seed$pid$connection$connection_requests;
    }

    map $http_user_agent $bad_bot {
        default 0;
        ~*(scrapy|screaming frog|semrush|ahrefs|mj12bot|netcraftsurveyagent) 1;
        ~*(wget|curl|python|perl|ruby|php|go-http|java|rust) 1;
        ~*(nmap|nikto|sqlmap|acunetix|burpsuite|zap) 1;
    }

    limit_conn addr 30;

    upstream backend_servers {
        least_conn;
        server backend1.example.com:443 weight=5 max_fails=3 fail_timeout=30s;
        server backend2.example.com:443 weight=5 max_fails=3 fail_timeout=30s;
        server backup1.example.com:443 backup;
        
        keepalive 32;
    }

    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers on;
    ssl_ciphers 'ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256';
    ssl_ecdh_curve secp384r1;
    ssl_session_timeout 24h;
    ssl_session_cache shared:SSL:50m;
    ssl_session_tickets off;
    ssl_stapling on;
    ssl_stapling_verify on;
    resolver 8.8.8.8 8.8.4.4 valid=300s;
    resolver_timeout 5s;

    ssl_stapling_file /etc/nginx/ssl/ocsp-cache.pem;

    ssl_dhparam /etc/nginx/ssl/dhparam.pem;
    
    server {
        listen 443 ssl http2;
        listen [::]:443 ssl http2;
        
        server_name your-domain.com www.your-domain.com;
        
        ssl_certificate /etc/nginx/ssl/your-domain.com/fullchain.pem;
        ssl_certificate_key /etc/nginx/ssl/your-domain.com/privkey.pem;
        
        ssl_trusted_certificate /etc/nginx/ssl/your-domain.com/chain.pem;
        
        more_set_headers "Strict-Transport-Security: max-age=31536000; includeSubDomains; preload";
        more_set_headers "X-Frame-Options: SAMEORIGIN";
        more_set_headers "X-Content-Type-Options: nosniff";
        more_set_headers "X-XSS-Protection: 1; mode=block";
        more_set_headers "Referrer-Policy: strict-origin-when-cross-origin";
        more_set_headers "Content-Security-Policy: default-src 'self'; script-src 'self' 'unsafe-inline' cdn.jsdelivr.net; img-src 'self' data: cdn.jsdelivr.net; style-src 'self' 'unsafe-inline' cdn.jsdelivr.net; font-src 'self' cdn.jsdelivr.net; connect-src 'self'; frame-ancestors 'none'; upgrade-insecure-requests";
        more_set_headers "Permissions-Policy: accelerometer=(), camera=(), geolocation=(), gyroscope=(), magnetometer=(), microphone=(), payment=(), usb=()";
        
        more_set_headers "X-Request-ID: $request_id";
        more_set_headers "X-Content-Type-Options: nosniff";
        
        if ($bad_bot = 1) {
            return 444;
        }
        
        gzip on;
        
        root /var/www/html;
        index index.html;
        
        location /api/ {
            limit_req zone=api burst=10 nodelay;
            
            limit_conn addr 10;
            
            location ~ /api/docs {
                deny all;
                return 404;
            }
            
            proxy_pass https://backend_servers;
            
            proxy_ssl_certificate /etc/nginx/ssl/client.pem;
            proxy_ssl_certificate_key /etc/nginx/ssl/client.key;
            proxy_ssl_protocols TLSv1.2 TLSv1.3;
            proxy_ssl_ciphers 'ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305';
            proxy_ssl_verify on;
            proxy_ssl_trusted_certificate /etc/nginx/ssl/ca.pem;
            proxy_ssl_verify_depth 2;
            proxy_ssl_session_reuse on;
            proxy_ssl_server_name on;
            
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Host $host;
            proxy_set_header X-Forwarded-Port $server_port;
            proxy_set_header X-Request-ID $request_id;
            
            proxy_hide_header X-Powered-By;
            proxy_hide_header Server;
            
            proxy_connect_timeout 10s;
            proxy_send_timeout 30s;
            proxy_read_timeout 30s;
            
            proxy_buffering on;
            proxy_buffer_size 16k;
            proxy_buffers 4 32k;
            proxy_busy_buffers_size 64k;
            proxy_temp_file_write_size 64k;
            
            add_header 'Access-Control-Allow-Origin' 'https://onrender_skees.com' always;
            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE' always;
            add_header 'Access-Control-Allow-Headers' 'Origin, X-Requested-With, Content-Type, Accept, Authorization, X-CSRF-Token' always;
            add_header 'Access-Control-Allow-Credentials' 'true' always;
            
            if ($request_method = 'OPTIONS') {
                add_header 'Access-Control-Max-Age' 1728000;
                add_header 'Content-Type' 'text/plain charset=UTF-8';
                add_header 'Content-Length' 0;
                return 204;
            }
            
            proxy_intercept_errors on;
            error_page 401 403 404 /errors/4xx.html;
            error_page 500 502 503 504 /errors/5xx.html;
        }
        
        location /api/auth/ {
            limit_req zone=login burst=3 nodelay;
            limit_conn addr 5;
            
            proxy_pass https://backend_servers;
            proxy_ssl_certificate /etc/nginx/ssl/client.pem;
            proxy_ssl_certificate_key /etc/nginx/ssl/client.key;
            proxy_ssl_protocols TLSv1.2 TLSv1.3;
            proxy_ssl_verify on;
            
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Request-ID $request_id;
            
            proxy_connect_timeout 5s;
            proxy_send_timeout 10s;
            proxy_read_timeout 10s;
        }
        
        location ~* \.(css|js|jpg|jpeg|png|gif|ico|svg|woff|woff2|ttf|eot)$ {
            expires max;
            add_header Cache-Control "public, max-age=31536000, immutable";
            access_log off;
            tcp_nodelay off;
            try_files $uri =404;
        }
        
        location ~ /\. {
            deny all;
            access_log off;
            log_not_found off;
        }
        
        error_page 404 /404.html;
        error_page 500 502 503 504 /50x.html;
        
        location = /404.html {
            root /usr/share/nginx/html;
            internal;
        }
        
        location = /50x.html {
            root /usr/share/nginx/html;
            internal;
        }
        
        location = /health {
            access_log off;
            add_header Content-Type text/plain;
            return 200 "OK";
        }
        
        location = /metrics {
            allow 127.0.0.1;
            allow 10.0.0.0/8;
            deny all;
            
            proxy_pass http://localhost:9113/metrics;
            proxy_set_header Host $host;
        }
    }
    
    server {
        listen 80;
        listen [::]:80;
        server_name your-domain.com www.your-domain.com;
        
        location /.well-known/acme-challenge/ {
            root /var/www/certbot;
        }
        
        location / {
            return 301 https://$host$request_uri;
        }
    }
    
    server {
        listen 80 default_server;
        listen [::]:80 default_server;
        listen 443 ssl http2 default_server;
        listen [::]:443 ssl http2 default_server;
        
        ssl_certificate /etc/nginx/ssl/default/default.pem;
        ssl_certificate_key /etc/nginx/ssl/default/default.key;
        
        server_name _;
        return 444;
    }
}

include /etc/nginx/conf.d/*.conf;
